-- MySQL Script generated by MySQL Workbench
-- Tue Nov  2 02:48:17 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP DATABASE IF EXISTS CollegeDB;
CREATE DATABASE IF NOT EXISTS CollegeDB;
USE CollegeDB;
-- -----------------------------------------------------
-- Table `User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `User` ;

CREATE TABLE IF NOT EXISTS `User` (
  `iduser` INT(9) NOT NULL AUTO_INCREMENT,
  `password` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) BINARY NOT NULL,
  `surname` VARCHAR(45) NOT NULL,
  `gender` VARCHAR(45) NOT NULL,
  `DOB` DATE NOT NULL,
  `age` TINYINT(2) NOT NULL,
  PRIMARY KEY (`iduser`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ForeignUniversity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ForeignUniversity` ;

CREATE TABLE IF NOT EXISTS `ForeignUniversity` (
  `idforeignUniversity` INT(9) NOT NULL AUTO_INCREMENT,
  `universityname` VARCHAR(45) NOT NULL,
  `campus` VARCHAR(45) NOT NULL,
  `country` VARCHAR(45) NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  `language` VARCHAR(45) NOT NULL,
  `specialty` TEXT(200) NULL,
  PRIMARY KEY (`idforeignUniversity`),
  UNIQUE INDEX `campus_UNIQUE` (`campus` ASC) VISIBLE,
  UNIQUE INDEX `universityname_UNIQUE` (`universityname` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Club`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Club` ;

CREATE TABLE IF NOT EXISTS `Club` (
  `idclub` INT(9) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` TEXT(200) NULL,
  `email` VARCHAR(45) NULL,
  PRIMARY KEY (`idclub`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Venue`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Venue` ;

CREATE TABLE IF NOT EXISTS `Venue` (
  `idvenue` INT(9) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `capacity` INT(5) NOT NULL,
  PRIMARY KEY (`idvenue`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Event`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Event` ;

CREATE TABLE IF NOT EXISTS `Event` (
  `idevent` INT(9) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `date` DATE NOT NULL,
  `venue` INT(9) NULL,
  `category` VARCHAR(45) NOT NULL,
  `description` TEXT(200) NULL,
  PRIMARY KEY (`idevent`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  CONSTRAINT `EVENT_VENUE`
    FOREIGN KEY (`venue`)
    REFERENCES `Venue` (`idvenue`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Division`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Division` ;

CREATE TABLE IF NOT EXISTS `Division` (
  `iddivision` INT(9) NOT NULL AUTO_INCREMENT,
  `sport` VARCHAR(45) NOT NULL,
  `num_of_teams` INT(3) NOT NULL DEFAULT 0,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`iddivision`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Fraternity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Fraternity` ;

CREATE TABLE IF NOT EXISTS `Fraternity` (
  `idfraternity` INT(9) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `founding_date` DATE NOT NULL,
  `num_of_members` TINYINT(3) NOT NULL DEFAULT 0,
  `closing_date` DATE NULL,
  PRIMARY KEY (`idfraternity`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Classroom`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Classroom` ;

CREATE TABLE IF NOT EXISTS `Classroom` (
  `idclassroom` INT(9) NOT NULL AUTO_INCREMENT,
  `purpose` VARCHAR(45) NOT NULL,
  `capacity` INT(3) UNSIGNED NOT NULL,
  PRIMARY KEY (`idclassroom`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Laboratory`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Laboratory` ;

CREATE TABLE IF NOT EXISTS `Laboratory` (
  `idlaboratory` INT(9) NOT NULL AUTO_INCREMENT,
  `category` VARCHAR(45) NOT NULL,
  `capacity` INT(4) UNSIGNED NOT NULL,
  `equipment` TEXT(150) NULL,
  PRIMARY KEY (`idlaboratory`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Scholarship`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Scholarship` ;

CREATE TABLE IF NOT EXISTS `Scholarship` (
  `idscholarship` INT(9) NOT NULL AUTO_INCREMENT,
  `company` VARCHAR(45) NOT NULL,
  `sum` DECIMAL(8,2) UNSIGNED NOT NULL,
  PRIMARY KEY (`idscholarship`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Insurance`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Insurance` ;

CREATE TABLE IF NOT EXISTS `Insurance` (
  `idinsurance` INT(9) NOT NULL AUTO_INCREMENT,
  `company` VARCHAR(45) NOT NULL,
  `money_available` DECIMAL(9,2) NOT NULL,
  `cost_per_month` DECIMAL(9,2) UNSIGNED NOT NULL,
  PRIMARY KEY (`idinsurance`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Product` ;

CREATE TABLE IF NOT EXISTS `Product` (
  `idproduct` INT(9) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `price` DECIMAL(8,2) UNSIGNED NOT NULL,
  `weight` DECIMAL(5,2) UNSIGNED NOT NULL COMMENT 'weight in kg',
  `height` DECIMAL(5,2) UNSIGNED NOT NULL COMMENT 'height in cm',
  `category` VARCHAR(45) NOT NULL,
  `description` TEXT(200) NULL,
  PRIMARY KEY (`idproduct`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Team`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Team` ;

CREATE TABLE IF NOT EXISTS `Team` (
  `idteam` INT(9) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `division` INT(9) NOT NULL,
  `number_of_players` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`idteam`, `division`),
  INDEX `TEAM_DIVISION_FK_idx` (`division` ASC) VISIBLE,
  CONSTRAINT `TEAM_DIVISION_FK`
    FOREIGN KEY (`division`)
    REFERENCES `Division` (`iddivision`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Cafeteria`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Cafeteria` ;

CREATE TABLE IF NOT EXISTS `Cafeteria` (
  `idcafeteria` INT(9) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `opening_hours` TIME NULL,
  `closing_hours` TIME NULL,
  PRIMARY KEY (`idcafeteria`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Address`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Address` ;

CREATE TABLE IF NOT EXISTS `Address` (
  `country` VARCHAR(45) NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  `street` VARCHAR(45) NOT NULL,
  `apartment` VARCHAR(45) NULL,
  `idaddress` INT(9) NOT NULL AUTO_INCREMENT,
  UNIQUE INDEX `country_UNIQUE` (`country` ASC) VISIBLE,
  UNIQUE INDEX `city_UNIQUE` (`city` ASC) VISIBLE,
  UNIQUE INDEX `apartment_UNIQUE` (`apartment` ASC) VISIBLE,
  UNIQUE INDEX `street_UNIQUE` (`street` ASC) VISIBLE,
  PRIMARY KEY (`idaddress`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `UserAdress`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `UserAdress` ;

CREATE TABLE IF NOT EXISTS `UserAdress` (
  `user` INT(9) NOT NULL,
  `address` INT(9) NOT NULL,
  PRIMARY KEY (`user`, `address`),
  INDEX `USERADDRESS_ADDRESS_FK_idx` (`address` ASC) VISIBLE,
  CONSTRAINT `USERADDRESS_USER_FK`
    FOREIGN KEY (`user`)
    REFERENCES `User` (`iduser`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `USERADDRESS_ADDRESS_FK`
    FOREIGN KEY (`address`)
    REFERENCES `Address` (`idaddress`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `StudentJob`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `StudentJob` ;

CREATE TABLE IF NOT EXISTS `StudentJob` (
  `idstudentJob` INT(9) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `wage` DECIMAL(5,2) UNSIGNED NOT NULL,
  `employer` VARCHAR(45) NULL,
  `requisites` TEXT(150) NULL,
  `description` TEXT(150) NULL,
  PRIMARY KEY (`idstudentJob`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Menu`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Menu` ;

CREATE TABLE IF NOT EXISTS `Menu` (
  `idmenu` INT(9) NOT NULL AUTO_INCREMENT,
  `appetizer` VARCHAR(100) NULL,
  `main_course` VARCHAR(100) NULL,
  `dessert` VARCHAR(100) NULL,
  `drink` VARCHAR(45) NULL,
  `price` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`idmenu`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Phone`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Phone` ;

CREATE TABLE IF NOT EXISTS `Phone` (
  `number` INT(9) UNSIGNED NOT NULL,
  `prefix` VARCHAR(4) NOT NULL,
  PRIMARY KEY (`number`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `UserPhones`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `UserPhones` ;

CREATE TABLE IF NOT EXISTS `UserPhones` (
  `user` INT(9) NOT NULL,
  `phone` INT(9) UNSIGNED NOT NULL,
  PRIMARY KEY (`user`, `phone`),
  INDEX `USERPHONES_PHONE_FK_idx` (`phone` ASC) VISIBLE,
  CONSTRAINT `USERPHONES_USER_FK`
    FOREIGN KEY (`user`)
    REFERENCES `User` (`iduser`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `USERPHONES_PHONE_FK`
    FOREIGN KEY (`phone`)
    REFERENCES `Phone` (`number`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ClubCategory`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ClubCategory` ;

CREATE TABLE IF NOT EXISTS `ClubCategory` (
  `club` INT(9) NOT NULL,
  `category` INT(9) NOT NULL,
  PRIMARY KEY (`category`, `club`),
  CONSTRAINT `CLUBCATEGORY_CLUB_FK`
    FOREIGN KEY (`club`)
    REFERENCES `Club` (`idclub`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FratAddress`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FratAddress` ;

CREATE TABLE IF NOT EXISTS `FratAddress` (
  `fraternity` INT(9) NOT NULL,
  `address` INT(9) NOT NULL,
  PRIMARY KEY (`fraternity`, `address`),
  INDEX `FRATADDRESS_ADDRESS_FK_idx` (`address` ASC) VISIBLE,
  CONSTRAINT `FRATADDRESS_FRAT_FK`
    FOREIGN KEY (`fraternity`)
    REFERENCES `Fraternity` (`idfraternity`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FRATADDRESS_ADDRESS_FK`
    FOREIGN KEY (`address`)
    REFERENCES `Address` (`idaddress`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `VenueAddress`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `VenueAddress` ;

CREATE TABLE IF NOT EXISTS `VenueAddress` (
  `venue` INT(9) NOT NULL,
  `address` INT(9) NOT NULL,
  PRIMARY KEY (`venue`, `address`),
  INDEX `VENUEADDRESS_ADDRESS_FK_idx` (`address` ASC) VISIBLE,
  CONSTRAINT `VENUEADDRESS_VENUE_FK`
    FOREIGN KEY (`venue`)
    REFERENCES `Venue` (`idvenue`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `VENUEADDRESS_ADDRESS_FK`
    FOREIGN KEY (`address`)
    REFERENCES `Address` (`idaddress`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CafeteriaAddress`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CafeteriaAddress` ;

CREATE TABLE IF NOT EXISTS `CafeteriaAddress` (
  `cafeteria` INT(9) NOT NULL,
  `address` INT(9) NOT NULL,
  PRIMARY KEY (`cafeteria`, `address`),
  INDEX `CAFETERIAADDRESS_ADDRESS_FK_idx` (`address` ASC) VISIBLE,
  CONSTRAINT `CAFETERIAADDRESS_CAFETERIA_FK`
    FOREIGN KEY (`cafeteria`)
    REFERENCES `Cafeteria` (`idcafeteria`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `CAFETERIAADDRESS_ADDRESS_FK`
    FOREIGN KEY (`address`)
    REFERENCES `Address` (`idaddress`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Gym`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Gym` ;

CREATE TABLE IF NOT EXISTS `Gym` (
  `idgym` INT(9) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `capacity` INT UNSIGNED NULL,
  `sports_facilities` TEXT(200) NULL,
  PRIMARY KEY (`idgym`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GymAddress`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GymAddress` ;

CREATE TABLE IF NOT EXISTS `GymAddress` (
  `gym` INT(9) NOT NULL,
  `address` INT(9) NOT NULL,
  PRIMARY KEY (`gym`, `address`),
  INDEX `GYMADDRESS_ADDRESS_FK_idx` (`address` ASC) VISIBLE,
  CONSTRAINT `GYMADDRESS_GYM_FK`
    FOREIGN KEY (`gym`)
    REFERENCES `Gym` (`idgym`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `GYMADDRESS_ADDRESS_FK`
    FOREIGN KEY (`address`)
    REFERENCES `Address` (`idaddress`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Student`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Student` ;

CREATE TABLE IF NOT EXISTS `Student` (
  `user` INT(9) NOT NULL,
  `idstudent` INT(9) NOT NULL AUTO_INCREMENT,
  `average_grade` DECIMAL(5,2) NOT NULL DEFAULT 0,
  `enrollment_year` YEAR NOT NULL DEFAULT 2000,
  PRIMARY KEY (`idstudent`),
  UNIQUE INDEX `user_UNIQUE` (`user` ASC) VISIBLE,
  CONSTRAINT `STUDENT_USER_FK_PK`
    FOREIGN KEY (`user`)
    REFERENCES `User` (`iduser`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TeamMember`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TeamMember` ;

CREATE TABLE IF NOT EXISTS `TeamMember` (
  `student` INT(9) NOT NULL,
  `team` INT(9) NOT NULL,
  `position` VARCHAR(45) NULL,
  `extra_info` TEXT(150) NULL,
  `number` VARCHAR(45) NULL,
  `season` YEAR NULL,
  INDEX `TEAMMEMBER_TEAM_FK_idx` (`team` ASC) VISIBLE,
  PRIMARY KEY (`student`, `team`),
  CONSTRAINT `TEAMMEMBER_STUDENT_FK`
    FOREIGN KEY (`student`)
    REFERENCES `Student` (`idstudent`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `TEAMMEMBER_TEAM_FK`
    FOREIGN KEY (`team`)
    REFERENCES `Team` (`idteam`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FratMember`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FratMember` ;

CREATE TABLE IF NOT EXISTS `FratMember` (
  `frat` INT(9) NOT NULL,
  `student` INT(9) NOT NULL,
  `status` VARCHAR(45) NULL,
  `date_of_entry` DATE NOT NULL,
  `date_of_exit` DATE NULL,
  INDEX `FRATMEMBER_STUDENT_FK_idx` (`student` ASC) VISIBLE,
  PRIMARY KEY (`student`),
  CONSTRAINT `FRATMEMBER_FRAT_FK`
    FOREIGN KEY (`frat`)
    REFERENCES `Fraternity` (`idfraternity`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FRATMEMBER_STUDENT_FK`
    FOREIGN KEY (`student`)
    REFERENCES `Student` (`idstudent`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GymMembership`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GymMembership` ;

CREATE TABLE IF NOT EXISTS `GymMembership` (
  `gym` INT(9) NOT NULL,
  `user` INT(9) NOT NULL,
  `monthly_price` DECIMAL(8,2) NOT NULL,
  `type` VARCHAR(45) NULL,
  `description` TEXT(150) NULL,
  `expedition` DATE NOT NULL,
  `expiration` DATE NULL,
  PRIMARY KEY (`gym`, `user`),
  INDEX `GYMMEMBERSHIP_USER_FK_idx` (`user` ASC) VISIBLE,
  CONSTRAINT `GYMMEMBERSHIP_GYM_FK`
    FOREIGN KEY (`gym`)
    REFERENCES `Gym` (`idgym`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `GYMMEMBERSHIP_USER_FK`
    FOREIGN KEY (`user`)
    REFERENCES `User` (`iduser`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Contract`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Contract` ;

CREATE TABLE IF NOT EXISTS `Contract` (
  `student` INT(9) NOT NULL,
  `job` INT(9) NOT NULL,
  PRIMARY KEY (`student`, `job`),
  INDEX `CONTRACT_JOB_FK_idx` (`job` ASC) VISIBLE,
  CONSTRAINT `CONTRACT_STUDENT_FK`
    FOREIGN KEY (`student`)
    REFERENCES `Student` (`idstudent`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `CONTRACT_JOB_FK`
    FOREIGN KEY (`job`)
    REFERENCES `StudentJob` (`idstudentJob`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Attends`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Attends` ;

CREATE TABLE IF NOT EXISTS `Attends` (
  `user` INT(9) NOT NULL,
  `event` INT(9) NOT NULL,
  `ticketprice` DECIMAL(8,2) UNSIGNED NULL,
  `tickettier` VARCHAR(45) NULL,
  INDEX `ATTENDS_EVENT_FK_idx` (`event` ASC) VISIBLE,
  PRIMARY KEY (`user`, `event`),
  CONSTRAINT `ATTENDS_USER_FK`
    FOREIGN KEY (`user`)
    REFERENCES `User` (`iduser`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `ATTENDS_EVENT_FK`
    FOREIGN KEY (`event`)
    REFERENCES `Event` (`idevent`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Professor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Professor` ;

CREATE TABLE IF NOT EXISTS `Professor` (
  `idprofessor` INT(9) NOT NULL AUTO_INCREMENT,
  `user` INT(9) NOT NULL,
  `salary` DECIMAL(9,2) NOT NULL DEFAULT 0,
  `number_of_sections` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`user`),
  INDEX `PROFESSOR_USER_FK_idx` (`user` ASC) VISIBLE,
  UNIQUE INDEX `idprofessor_UNIQUE` (`idprofessor` ASC) VISIBLE,
  CONSTRAINT `PROFESSOR_USER_FK_PK`
    FOREIGN KEY (`user`)
    REFERENCES `User` (`iduser`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Rector`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Rector` ;

CREATE TABLE IF NOT EXISTS `Rector` (
  `idrector` INT(9) NOT NULL AUTO_INCREMENT,
  `user` INT(9) NOT NULL,
  `salary` DECIMAL(9,2) NOT NULL DEFAULT 0,
  PRIMARY KEY (`idrector`),
  INDEX `RECTOR_USER_FK_idx` (`user` ASC) VISIBLE,
  UNIQUE INDEX `user_UNIQUE` (`user` ASC) VISIBLE,
  CONSTRAINT `RECTOR_USER_FK`
    FOREIGN KEY (`user`)
    REFERENCES `User` (`iduser`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Admin`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Admin` ;

CREATE TABLE IF NOT EXISTS `Admin` (
  `idadmin` INT(9) NOT NULL AUTO_INCREMENT,
  `user` INT(9) NOT NULL,
  PRIMARY KEY (`idadmin`),
  INDEX `ADMIN_USER_ID_idx` (`user` ASC) VISIBLE,
  UNIQUE INDEX `user_UNIQUE` (`user` ASC) VISIBLE,
  CONSTRAINT `ADMIN_USER_ID`
    FOREIGN KEY (`user`)
    REFERENCES `User` (`iduser`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Action`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Action` ;

CREATE TABLE IF NOT EXISTS `Action` (
  `idaction` INT(9) NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(150) NOT NULL,
  PRIMARY KEY (`idaction`),
  UNIQUE INDEX `description_UNIQUE` (`description` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Permissions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Permissions` ;

CREATE TABLE IF NOT EXISTS `Permissions` (
  `user` INT(9) NOT NULL COMMENT 'User permissions are added to this table when a new user is created. New users with no role have no permissions, but once they go into a role, they are added to this table along with their permissions.',
  `action` INT(9) NOT NULL,
  PRIMARY KEY (`user`, `action`),
  INDEX `PERMISSIONS_ACTION_FK_idx` (`action` ASC) VISIBLE,
  CONSTRAINT `PERMISSIONS_USER_FK`
    FOREIGN KEY (`user`)
    REFERENCES `User` (`iduser`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `PERMISSIONS_ACTION_FK`
    FOREIGN KEY (`action`)
    REFERENCES `Action` (`idaction`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Course`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Course` ;

CREATE TABLE IF NOT EXISTS `Course` (
  `idcourse` INT(9) NOT NULL AUTO_INCREMENT,
  `description` TEXT(100) NULL,
  `credits` INT NOT NULL DEFAULT 3,
  PRIMARY KEY (`idcourse`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Section`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Section` ;

CREATE TABLE IF NOT EXISTS `Section` (
  `idsection` INT(9) NOT NULL AUTO_INCREMENT,
  `course` INT(9) NOT NULL,
  `number_of_students` INT(3) NOT NULL DEFAULT 0,
  PRIMARY KEY (`idsection`, `course`),
  INDEX `SECTION_COURSE_FK_idx` (`course` ASC) VISIBLE,
  CONSTRAINT `SECTION_COURSE_FK`
    FOREIGN KEY (`course`)
    REFERENCES `Course` (`idcourse`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Semester`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Semester` ;

CREATE TABLE IF NOT EXISTS `Semester` (
  `idsemester` INT(9) NOT NULL AUTO_INCREMENT,
  `year` YEAR NOT NULL,
  `period` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idsemester`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Enrolls`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Enrolls` ;

CREATE TABLE IF NOT EXISTS `Enrolls` (
  `student` INT(9) NOT NULL,
  `section` INT(9) NOT NULL,
  `semester` INT(9) NOT NULL,
  `grade` VARCHAR(45) NULL,
  PRIMARY KEY (`student`, `section`, `semester`),
  INDEX `ENROLLS_SECTION_FK_idx` (`section` ASC) VISIBLE,
  INDEX `ENROLLS_SEMESTER_FK_idx` (`semester` ASC) VISIBLE,
  CONSTRAINT `ENROLLS_STUDENT_FK`
    FOREIGN KEY (`student`)
    REFERENCES `Student` (`idstudent`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `ENROLLS_SECTION_FK`
    FOREIGN KEY (`section`)
    REFERENCES `Section` (`idsection`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `ENROLLS_SEMESTER_FK`
    FOREIGN KEY (`semester`)
    REFERENCES `Semester` (`idsemester`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Department`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Department` ;

CREATE TABLE IF NOT EXISTS `Department` (
  `iddepartment` INT(9) NOT NULL AUTO_INCREMENT,
  `number_of_degrees` INT(3) NOT NULL DEFAULT 1,
  `category` VARCHAR(45) NULL,
  `head` INT(9) NULL,
  PRIMARY KEY (`iddepartment`),
  INDEX `DEPARTMENT_PROFESSOR_FK_idx` (`head` ASC) VISIBLE,
  CONSTRAINT `DEPARTMENT_PROFESSOR_FK`
    FOREIGN KEY (`head`)
    REFERENCES `Professor` (`idprofessor`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Degree`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Degree` ;

CREATE TABLE IF NOT EXISTS `Degree` (
  `iddegree` INT(9) NOT NULL AUTO_INCREMENT,
  `description` TEXT(250) NULL,
  `number_of_students` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`iddegree`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BelongsTo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BelongsTo` ;

CREATE TABLE IF NOT EXISTS `BelongsTo` (
  `department` INT(9) NOT NULL,
  `degree` INT(9) NOT NULL,
  PRIMARY KEY (`department`, `degree`),
  INDEX `BELONGSTO_DEGREE_FK_idx` (`degree` ASC) VISIBLE,
  CONSTRAINT `BELONGSTO_DEPT_FK`
    FOREIGN KEY (`department`)
    REFERENCES `Department` (`iddepartment`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `BELONGSTO_DEGREE_FK`
    FOREIGN KEY (`degree`)
    REFERENCES `Degree` (`iddegree`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Teaches`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Teaches` ;

CREATE TABLE IF NOT EXISTS `Teaches` (
  `professor` INT(9) NOT NULL,
  `section` INT(9) NOT NULL,
  `semester` INT(9) NOT NULL,
  PRIMARY KEY (`professor`, `semester`, `section`),
  INDEX `TEACHES_SECTION_FK_idx` (`section` ASC) VISIBLE,
  INDEX `TEACHES_SEMESTER_FK_idx` (`semester` ASC) VISIBLE,
  CONSTRAINT `TEACHES_PROFESSOR_FK`
    FOREIGN KEY (`professor`)
    REFERENCES `Professor` (`idprofessor`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `TEACHES_SECTION_FK`
    FOREIGN KEY (`section`)
    REFERENCES `Section` (`idsection`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `TEACHES_SEMESTER_FK`
    FOREIGN KEY (`semester`)
    REFERENCES `Semester` (`idsemester`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Studies`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Studies` ;

CREATE TABLE IF NOT EXISTS `Studies` (
  `student` INT(9) NOT NULL,
  `degree` INT(9) NOT NULL,
  `year_start` YEAR NOT NULL,
  `year_end` YEAR NULL,
  PRIMARY KEY (`student`, `degree`),
  INDEX `STUDIES_DEGREE_FK_idx` (`degree` ASC) VISIBLE,
  CONSTRAINT `STUDIES_STUDENT_FK`
    FOREIGN KEY (`student`)
    REFERENCES `Student` (`idstudent`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `STUDIES_DEGREE_FK`
    FOREIGN KEY (`degree`)
    REFERENCES `Degree` (`iddegree`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `IsPartOf`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `IsPartOf` ;

CREATE TABLE IF NOT EXISTS `IsPartOf` (
  `course` INT(9) NOT NULL,
  `degree` INT(9) NOT NULL,
  PRIMARY KEY (`course`, `degree`),
  INDEX `ISPARTOF_DEGREE_FK_idx` (`degree` ASC) VISIBLE,
  CONSTRAINT `ISPARTOF_COURSE_FK`
    FOREIGN KEY (`course`)
    REFERENCES `Course` (`idcourse`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `ISPARTOF_DEGREE_FK`
    FOREIGN KEY (`degree`)
    REFERENCES `Degree` (`iddegree`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ForeignDegree`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ForeignDegree` ;

CREATE TABLE IF NOT EXISTS `ForeignDegree` (
  `idforeigndegree` INT(9) NOT NULL AUTO_INCREMENT,
  `description` TEXT(250) NULL,
  `foreignUni` INT(9) NOT NULL,
  PRIMARY KEY (`idforeigndegree`, `foreignUni`),
  INDEX `FOREIGNDEG_FOREIGNUNI_FK_PK_idx` (`foreignUni` ASC) VISIBLE,
  CONSTRAINT `FOREIGNDEG_FOREIGNUNI_FK_PK`
    FOREIGN KEY (`foreignUni`)
    REFERENCES `ForeignUniversity` (`idforeignUniversity`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Equivalent`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Equivalent` ;

CREATE TABLE IF NOT EXISTS `Equivalent` (
  `degree` INT(9) NOT NULL,
  `foreign_degree` INT(9) NOT NULL,
  PRIMARY KEY (`degree`, `foreign_degree`),
  INDEX `EQUIVALENT_FOREIGNDEG_FK_idx` (`foreign_degree` ASC) VISIBLE,
  CONSTRAINT `EQUIVALENT_DEGREE_FK`
    FOREIGN KEY (`degree`)
    REFERENCES `Degree` (`iddegree`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `EQUIVALENT_FOREIGNDEG_FK`
    FOREIGN KEY (`foreign_degree`)
    REFERENCES `ForeignDegree` (`idforeigndegree`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Class`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Class` ;

CREATE TABLE IF NOT EXISTS `Class` (
  `idclass` INT(9) NOT NULL AUTO_INCREMENT,
  `time_slot_begin` TIME NULL,
  `time_slot_end` TIME NULL,
  PRIMARY KEY (`idclass`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Takes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Takes` ;

CREATE TABLE IF NOT EXISTS `Takes` (
  `section` INT(9) NOT NULL,
  `class` INT(9) NOT NULL,
  PRIMARY KEY (`section`, `class`),
  INDEX `TAKES_CLASS_FK_idx` (`class` ASC) VISIBLE,
  CONSTRAINT `TAKES_SECTION_FK`
    FOREIGN KEY (`section`)
    REFERENCES `Section` (`idsection`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `TAKES_CLASS_FK`
    FOREIGN KEY (`class`)
    REFERENCES `Class` (`idclass`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Store`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Store` ;

CREATE TABLE IF NOT EXISTS `Store` (
  `idstore` INT(9) NOT NULL AUTO_INCREMENT,
  `address` INT(9) NULL,
  `name` VARCHAR(45) NOT NULL,
  `opening_hours` TIME NULL,
  `closing_hours` TIME NULL,
  PRIMARY KEY (`idstore`),
  INDEX `STORE_ADDRES_FK_idx` (`address` ASC) VISIBLE,
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  UNIQUE INDEX `address_UNIQUE` (`address` ASC) VISIBLE,
  CONSTRAINT `STORE_ADDRES_FK`
    FOREIGN KEY (`address`)
    REFERENCES `Address` (`idaddress`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Sells`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Sells` ;

CREATE TABLE IF NOT EXISTS `Sells` (
  `store` INT(9) NOT NULL,
  `product` INT(9) NOT NULL,
  `stock` INT UNSIGNED NOT NULL DEFAULT 1,
  PRIMARY KEY (`store`, `product`),
  INDEX `SELLS_PRODUCT_FK_idx` (`product` ASC) VISIBLE,
  CONSTRAINT `SELLS_STORE_FK`
    FOREIGN KEY (`store`)
    REFERENCES `Store` (`idstore`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `SELLS_PRODUCT_FK`
    FOREIGN KEY (`product`)
    REFERENCES `Product` (`idproduct`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Offers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Offers` ;

CREATE TABLE IF NOT EXISTS `Offers` (
  `cafeteria` INT(9) NOT NULL,
  `menu` INT(9) NOT NULL,
  `time_begin` TIME NULL,
  `time_end` TIME NULL,
  PRIMARY KEY (`cafeteria`, `menu`),
  INDEX `OFFERS_MENU_FK_idx` (`menu` ASC) VISIBLE,
  CONSTRAINT `OFFERS_CAFETERIA_FK`
    FOREIGN KEY (`cafeteria`)
    REFERENCES `Cafeteria` (`idcafeteria`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `OFFERS_MENU_FK`
    FOREIGN KEY (`menu`)
    REFERENCES `Menu` (`idmenu`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ClubMember`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ClubMember` ;

CREATE TABLE IF NOT EXISTS `ClubMember` (
  `user` INT(9) NOT NULL,
  `club` INT(9) NOT NULL,
  `role` VARCHAR(45) NULL,
  `info` TEXT(150) NULL,
  INDEX `CLUBMEMBR_CLUB_FK_idx` (`club` ASC) VISIBLE,
  PRIMARY KEY (`user`, `club`),
  CONSTRAINT `CLUBMEMBER_USER_FK`
    FOREIGN KEY (`user`)
    REFERENCES `User` (`iduser`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `CLUBMEMBR_CLUB_FK`
    FOREIGN KEY (`club`)
    REFERENCES `Club` (`idclub`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Winner`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Winner` ;

CREATE TABLE IF NOT EXISTS `Winner` (
  `student` INT(9) NOT NULL,
  `scholarship` INT(9) NOT NULL,
  PRIMARY KEY (`student`, `scholarship`),
  INDEX `WINNER_SCHOLARSHIP_FK_idx` (`scholarship` ASC) VISIBLE,
  CONSTRAINT `WINNER_STUDENT_FK`
    FOREIGN KEY (`student`)
    REFERENCES `Student` (`idstudent`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `WINNER_SCHOLARSHIP_FK`
    FOREIGN KEY (`scholarship`)
    REFERENCES `Scholarship` (`idscholarship`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Plan`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Plan` ;

CREATE TABLE IF NOT EXISTS `Plan` (
  `student` INT(9) NOT NULL,
  `insurance` INT(9) NOT NULL,
  `date_bought` DATE NOT NULL,
  PRIMARY KEY (`student`, `insurance`),
  INDEX `PLAN_INSURANCE_FK_idx` (`insurance` ASC) VISIBLE,
  CONSTRAINT `PLAN_STUDENT_FK`
    FOREIGN KEY (`student`)
    REFERENCES `Student` (`idstudent`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `PLAN_INSURANCE_FK`
    FOREIGN KEY (`insurance`)
    REFERENCES `Insurance` (`idinsurance`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TakesClassIn`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TakesClassIn` ;

CREATE TABLE IF NOT EXISTS `TakesClassIn` (
  `class` INT(9) NOT NULL,
  `place` INT(9) NOT NULL,
  PRIMARY KEY (`class`, `place`),
  INDEX `TAKESPLACEIN_PLACE_FK_idx` (`place` ASC) VISIBLE,
  CONSTRAINT `TAKESPLACEIN_CLASS_FK`
    FOREIGN KEY (`class`)
    REFERENCES `Class` (`idclass`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `TAKESPLACEIN_PLACE_FK`
    FOREIGN KEY (`place`)
    REFERENCES `Classroom` (`idclassroom`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Competition`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Competition` ;

CREATE TABLE IF NOT EXISTS `Competition` (
  `idcompetition` INT(9) NOT NULL AUTO_INCREMENT,
  `division` INT(9) NOT NULL,
  `number_of_teams` INT NOT NULL DEFAULT 2,
  `reward` INT NULL,
  PRIMARY KEY (`idcompetition`, `division`),
  INDEX `COMPETITION_DIVISION_FK_idx` (`division` ASC) VISIBLE,
  CONSTRAINT `COMPETITION_DIVISION_FK`
    FOREIGN KEY (`division`)
    REFERENCES `Division` (`iddivision`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Match1`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Match1` ;

CREATE TABLE IF NOT EXISTS `Match1` (
  `idmatch` INT(9) NOT NULL AUTO_INCREMENT,
  `team1` INT(9) NOT NULL,
  `team2` INT(9) NOT NULL,
  `date` DATE NOT NULL,
  `competition` INT(9) NULL,
  PRIMARY KEY (`idmatch`, `team1`, `team2`, `date`),
  INDEX `MATCH_TEAM1_FK_idx` (`team1` ASC) VISIBLE,
  INDEX `MATCH_TEAM2_FK_idx` (`team2` ASC) VISIBLE,
  INDEX `MATCH_COMPETITION_FK_idx` (`competition` ASC) VISIBLE,
  CONSTRAINT `MATCH1_TEAM1_FK`
    FOREIGN KEY (`team1`)
    REFERENCES `Team` (`idteam`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `MATCH1_TEAM2_FK`
    FOREIGN KEY (`team2`)
    REFERENCES `Team` (`idteam`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `MATCH1_COMPETITION_FK`
    FOREIGN KEY (`competition`)
    REFERENCES `Competition` (`idcompetition`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Hosting`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Hosting` ;

CREATE TABLE IF NOT EXISTS `Hosting` (
  `match1` INT(9) NOT NULL,
  `venue` INT(9) NOT NULL,
  PRIMARY KEY (`match1`, `venue`),
  INDEX `HOSTS_VENUE_FK_idx` (`venue` ASC) VISIBLE,
  CONSTRAINT `HOSTS_MATCH1_FK`
    FOREIGN KEY (`match1`)
    REFERENCES `Match1` (`idmatch`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `HOSTS_VENUE_FK`
    FOREIGN KEY (`venue`)
    REFERENCES `Venue` (`idvenue`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Competes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Competes` ;

CREATE TABLE IF NOT EXISTS `Competes` (
  `team` INT(9) NOT NULL,
  `competition` INT(9) NOT NULL,
  `win` BIT(1) NULL,
  `season` VARCHAR(9) NULL,
  PRIMARY KEY (`team`, `competition`),
  INDEX `TEAMCOMPETITION_COMPETITION_FK_idx` (`competition` ASC) VISIBLE,
  CONSTRAINT `TEAMCOMPETITION_TEAM_FK`
    FOREIGN KEY (`team`)
    REFERENCES `Team` (`idteam`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `TEAMCOMPETITION_COMPETITION_FK`
    FOREIGN KEY (`competition`)
    REFERENCES `Competition` (`idcompetition`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TakesLabIn`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TakesLabIn` ;

CREATE TABLE IF NOT EXISTS `TakesLabIn` (
  `class` INT(9) NOT NULL,
  `place` INT(9) NOT NULL,
  PRIMARY KEY (`class`, `place`),
  INDEX `TAKESLABIN_LAB_FK_idx` (`place` ASC) VISIBLE,
  CONSTRAINT `TAKESLABIN_CLASS_FK`
    FOREIGN KEY (`class`)
    REFERENCES `Class` (`idclass`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `TAKESLABIN_LAB_FK`
    FOREIGN KEY (`place`)
    REFERENCES `Laboratory` (`idlaboratory`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


DELIMITER $$

DROP TRIGGER IF EXISTS `Team_AFTER_INSERT` $$
CREATE DEFINER = CURRENT_USER TRIGGER `CollegeDB`.`Team_AFTER_INSERT` AFTER INSERT ON `Team` FOR EACH ROW
BEGIN
UPDATE Division SET num_of_teams = num_of_teams +1 WHERE iddivision = NEW.division;
END$$


DROP TRIGGER IF EXISTS `Team_BEFORE_DELETE` $$
CREATE DEFINER = CURRENT_USER TRIGGER `CollegeDB`.`Team_BEFORE_DELETE` BEFORE DELETE ON `Team` FOR EACH ROW
BEGIN
UPDATE Division SET num_of_teams = num_of_teams-1 WHERE iddivision = OLD.division;
END$$


DROP TRIGGER IF EXISTS `TeamMember_AFTER_INSERT` $$
CREATE DEFINER = CURRENT_USER TRIGGER `CollegeDB`.`TeamMember_AFTER_INSERT` AFTER INSERT ON `TeamMember` FOR EACH ROW
BEGIN
UPDATE Team SET number_of_players = number_of_players+1 WHERE idteam = NEW.team;
END$$


DROP TRIGGER IF EXISTS `TeamMember_BEFORE_DELETE` $$
CREATE DEFINER = CURRENT_USER TRIGGER `CollegeDB`.`TeamMember_BEFORE_DELETE` BEFORE DELETE ON `TeamMember` FOR EACH ROW
BEGIN
UPDATE Team SET number_of_players = number_of_players -1 WHERE idteam = OLD.team;
END$$


DROP TRIGGER IF EXISTS `FratMember_AFTER_INSERT` $$
CREATE DEFINER = CURRENT_USER TRIGGER `CollegeDB`.`FratMember_AFTER_INSERT` AFTER INSERT ON `FratMember` FOR EACH ROW
BEGIN
UPDATE Fraternity SET num_of_members = num_of_members +1 WHERE idfraternity = NEW.frat;

END$$


DROP TRIGGER IF EXISTS `FratMember_BEFORE_DELETE` $$
CREATE DEFINER = CURRENT_USER TRIGGER `CollegeDB`.`FratMember_BEFORE_DELETE` BEFORE DELETE ON `FratMember` FOR EACH ROW
BEGIN
UPDATE Fraternity SET num_of_members = num_of_members -1 WHERE idfraternity = OLD.frat;

END$$


DROP TRIGGER IF EXISTS `Enrolls_AFTER_INSERT` $$
CREATE DEFINER = CURRENT_USER TRIGGER `CollegeDB`.`Enrolls_AFTER_INSERT` AFTER INSERT ON `Enrolls` FOR EACH ROW
BEGIN
UPDATE Section SET number_of_students = number_of_students +1 WHERE idsection = NEW.section;
END$$


DROP TRIGGER IF EXISTS `Enrolls_BEFORE_DELETE` $$
CREATE DEFINER = CURRENT_USER TRIGGER `CollegeDB`.`Enrolls_BEFORE_DELETE` BEFORE DELETE ON `Enrolls` FOR EACH ROW
BEGIN
UPDATE Section SET number_of_students = number_of_students - 1 WHERE idsection = OLD.section; 
END$$


DROP TRIGGER IF EXISTS `BelongsTo_AFTER_INSERT` $$
CREATE DEFINER = CURRENT_USER TRIGGER `CollegeDB`.`BelongsTo_AFTER_INSERT` AFTER INSERT ON `BelongsTo` FOR EACH ROW
BEGIN
UPDATE Department SET number_of_degrees = number_of_degrees +1 WHERE iddepartment = NEW.department;
END$$


DROP TRIGGER IF EXISTS `BelongsTo_BEFORE_DELETE` $$
CREATE DEFINER = CURRENT_USER TRIGGER `CollegeDB`.`BelongsTo_BEFORE_DELETE` BEFORE DELETE ON `BelongsTo` FOR EACH ROW
BEGIN
UPDATE Department SET number_of_degrees = number_of_degrees -1 WHERE iddepartment = OLD.department;
END$$


DROP TRIGGER IF EXISTS `Teaches_AFTER_INSERT` $$
CREATE DEFINER = CURRENT_USER TRIGGER `CollegeDB`.`Teaches_AFTER_INSERT` AFTER INSERT ON `Teaches` FOR EACH ROW
BEGIN
UPDATE Professor SET number_of_sections = number_of_sections+1 WHERE (idprofessor = NEW.professor);
END$$


DROP TRIGGER IF EXISTS `Teaches_BEFORE_DELETE` $$
CREATE DEFINER = CURRENT_USER TRIGGER `CollegeDB`.`Teaches_BEFORE_DELETE` BEFORE DELETE ON `Teaches` FOR EACH ROW
BEGIN
UPDATE Professor SET number_of_sections = number_of_sections-1 WHERE (idprofessor = OLD.professor);
END$$


DROP TRIGGER IF EXISTS `Studies_AFTER_INSERT` $$
CREATE DEFINER = CURRENT_USER TRIGGER `CollegeDB`.`Studies_AFTER_INSERT` AFTER INSERT ON `Studies` FOR EACH ROW
BEGIN
UPDATE Degree SET number_of_students = number_of_students +1 WHERE (iddegree = NEW.degree);
END$$


DROP TRIGGER IF EXISTS `Studies_BEFORE_DELETE` $$
CREATE DEFINER = CURRENT_USER TRIGGER `CollegeDB`.`Studies_BEFORE_DELETE` BEFORE DELETE ON `Studies` FOR EACH ROW
BEGIN
UPDATE Degree SET number_of_students = number_of_students -1 WHERE (iddegree = OLD.degree);
END$$


DROP TRIGGER IF EXISTS `Competes_AFTER_INSERT` $$
CREATE DEFINER = CURRENT_USER TRIGGER `CollegeDB`.`Competes_AFTER_INSERT` AFTER INSERT ON `Competes` FOR EACH ROW
BEGIN
UPDATE Competition SET number_of_teams = number_of_teams + 1 WHERE idcompetition = NEW.competition;

END$$


DROP TRIGGER IF EXISTS `Competes_BEFORE_DELETE` $$
CREATE DEFINER = CURRENT_USER TRIGGER `CollegeDB`.`Competes_BEFORE_DELETE` BEFORE DELETE ON `Competes` FOR EACH ROW
BEGIN
UPDATE Competition SET number_of_teams = number_of_teams -1 WHERE idcompetition = OLD.competition;

END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
